# ──────────────────────────────────────────────────────────────────────────────
# FastAPI --► Docker image --► CI/CD pipeline
# Triggered on every push to main or any pull-request
# Requires these repo secrets:
#   DOCKER_USERNAME, DOCKER_PASSWORD      ── credentials for Docker registry
#   DEPLOY_HOST, DEPLOY_USER, DEPLOY_KEY  ── SSH creds for production server
# ──────────────────────────────────────────────────────────────────────────────
name: CI-CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: fastapi-app               # change if you like
  REGISTRY: docker.io                   # e.g. ghcr.io for GitHub Container Registry
  REGISTRY_USER: ${{ secrets.DOCKER_USERNAME }}

jobs:
  # ── Build & push container ────────────────────────────────────────────────
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 📥  Checkout code
        uses: actions/checkout@v4

      - name: 🐳  Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐  Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Optional: run pytest before building (uncomment if you have tests)
      # - name: 🧪  Run unit tests
      #   run: |
      #     pip install -r requirements.txt
      #     pytest

      - name: 🏗️  Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY_USER }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY_USER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  # ── Deploy after image is published ────────────────────────────────────────
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'   # only auto-deploy main branch

    steps:
      - name: 🚀  SSH deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            set -e
            IMAGE=${{ env.REGISTRY_USER }}/${{ env.IMAGE_NAME }}:latest
            docker pull $IMAGE
            docker stop fastapi || true
            docker rm fastapi   || true
            docker run -d \
              --name fastapi \
              -p 80:8000 \
              --restart unless-stopped \
              $IMAGE

